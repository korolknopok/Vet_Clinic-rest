{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\n/**\n * Vet_Clinic-rest\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { RequiredError } from \"./base.ts\";\n\n/**\n\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com';\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName, paramName, paramValue) {\n  if (paramValue === null || paramValue === undefined) {\n    throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n  }\n};\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object, keyParamName, configuration) {\n  if (configuration && configuration.apiKey) {\n    const localVarApiKeyValue = typeof configuration.apiKey === 'function' ? await configuration.apiKey(keyParamName) : await configuration.apiKey;\n    object[keyParamName] = localVarApiKeyValue;\n  }\n};\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object, configuration) {\n  if (configuration && (configuration.username || configuration.password)) {\n    object[\"auth\"] = {\n      username: configuration.username,\n      password: configuration.password\n    };\n  }\n};\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object, configuration) {\n  if (configuration && configuration.accessToken) {\n    const accessToken = typeof configuration.accessToken === 'function' ? await configuration.accessToken() : await configuration.accessToken;\n    object[\"Authorization\"] = \"Bearer \" + accessToken;\n  }\n};\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object, name, scopes, configuration) {\n  if (configuration && configuration.accessToken) {\n    const localVarAccessTokenValue = typeof configuration.accessToken === 'function' ? await configuration.accessToken(name, scopes) : await configuration.accessToken;\n    object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n  }\n};\nfunction setFlattenedQueryParams(urlSearchParams, parameter, key = \"\") {\n  if (parameter == null) return;\n  if (typeof parameter === \"object\") {\n    if (Array.isArray(parameter)) {\n      parameter.forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n    } else {\n      Object.keys(parameter).forEach(currentKey => setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`));\n    }\n  } else {\n    if (urlSearchParams.has(key)) {\n      urlSearchParams.append(key, parameter);\n    } else {\n      urlSearchParams.set(key, parameter);\n    }\n  }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url, ...objects) {\n  const searchParams = new URLSearchParams(url.search);\n  setFlattenedQueryParams(searchParams, objects);\n  url.search = searchParams.toString();\n};\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value, requestOptions, configuration) {\n  const nonString = typeof value !== 'string';\n  const needsSerialization = nonString && configuration && configuration.isJsonMime ? configuration.isJsonMime(requestOptions.headers['Content-Type']) : nonString;\n  return needsSerialization ? JSON.stringify(value !== undefined ? value : {}) : value || \"\";\n};\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url) {\n  return url.pathname + url.search + url.hash;\n};\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs, globalAxios, BASE_PATH, configuration) {\n  return (axios = globalAxios, basePath = BASE_PATH) => {\n    const axiosRequestArgs = {\n      ...axiosArgs.options,\n      url: ((configuration === null || configuration === void 0 ? void 0 : configuration.basePath) || axios.defaults.baseURL || basePath) + axiosArgs.url\n    };\n    return axios.request(axiosRequestArgs);\n  };\n};","map":{"version":3,"names":["RequiredError","DUMMY_BASE_URL","assertParamExists","functionName","paramName","paramValue","undefined","setApiKeyToObject","object","keyParamName","configuration","apiKey","localVarApiKeyValue","setBasicAuthToObject","username","password","setBearerAuthToObject","accessToken","setOAuthToObject","name","scopes","localVarAccessTokenValue","setFlattenedQueryParams","urlSearchParams","parameter","key","Array","isArray","forEach","item","Object","keys","currentKey","has","append","set","setSearchParams","url","objects","searchParams","URLSearchParams","search","toString","serializeDataIfNeeded","value","requestOptions","nonString","needsSerialization","isJsonMime","headers","JSON","stringify","toPathString","pathname","hash","createRequestFunction","axiosArgs","globalAxios","BASE_PATH","axios","basePath","axiosRequestArgs","options","defaults","baseURL","request"],"sources":["C:/Users/Artem Nazmutdinov/vet_clinic_front/src/json/common.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Vet_Clinic-rest\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport type { Configuration } from \"./configuration.ts\";\nimport type { RequestArgs } from \"./base.ts\";\nimport type { AxiosInstance, AxiosResponse } from 'axios';\nimport { RequiredError } from \"./base.ts\";\n\n\n/**\n\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com'\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {\n    if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n            ? await configuration.apiKey(keyParamName)\n            : await configuration.apiKey;\n        object[keyParamName] = localVarApiKeyValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken()\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken(name, scopes)\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n}\n\nfunction setFlattenedQueryParams(urlSearchParams: URLSearchParams, parameter: any, key: string = \"\"): void {\n    if (parameter == null) return;\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            (parameter as any[]).forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        } \n        else {\n            Object.keys(parameter).forEach(currentKey => \n                setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`)\n            );\n        }\n    } \n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        } \n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n}\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n}\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n    return url.pathname + url.search + url.hash\n}\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {\n    return <T = unknown, R = AxiosResponse<T>>(axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n        const axiosRequestArgs = {...axiosArgs.options, url: (configuration?.basePath || axios.defaults.baseURL || basePath) + axiosArgs.url};\n        return axios.request<T, R>(axiosRequestArgs);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}