{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artem Nazmutdinov\\\\vet_clinic_front\\\\src\\\\routes\\\\contact.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport React, { Component } from 'react';\nimport ClientInfo from \"../components/ClientInfo.tsx\";\nimport axios from 'axios';\nimport { ClientApiAxiosParamCreator } from '../json/api.ts';\n// import { Configuration } from '../json/configuration.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List() {\n  _s();\n  const [data, setData] = useState([]);\n  var f = ClientApiAxiosParamCreator(); // создаем API-клиент\n  // let b = new Promise((resolve, reject) => { // создаем обещание\n  // f.apiClientGet().then((result) => {  // получаем результат от функции\n  //     resolve(result); // возвращаем результат в обещание\n  // }).catch((error) => {\n  //     reject(error);\n  // });\n  // });\n  // b.then((data) => {\n  //     console.log(data);\n  // }); \n  // var f = ClientApiAxiosParamCreator();\n  // f.apiClientGet();\n  // console.log(f.apiClientGet());\n  apiClientGet({\n    method: 'GET',\n    url: '/api/Client'\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw response;\n    }\n  }).then(data => {\n    // Здесь data будет содержать полученные данные\n  }).catch(e => {\n    console.log(e);\n  });\n  const handleGetData = () => {\n    const optionsGet = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // fetch('https://localhost:7205/api/Client', optionsGet)\n    //     // .then(response => response.json())\n    //     // .then(json => setData(json))\n    //     // .catch(console.error);\n    //     .then(response => response.json())\n    //     .then(json => setData(json))\n    //     .catch(error => {\n    //     // Обработка ошибок\n    //     console.error('Error:', error);\n    // });\n    // async function getData() {\n    //     try {\n    //         const response = await fetch('https://localhost:7205/api/Client', optionsGet);\n    //         const json = await response.json();\n    //         setData(json);\n    //     } catch (error) {\n    //         console.error('Error:', error);\n    //     }\n    // }\n    // getData();\n  };\n\n  useEffect(() => {\n    handleGetData();\n  }, []);\n  const handleDeleteData = id => {\n    const optionsDelete = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    console.log(id);\n    fetch('https://localhost:7205/api/Client/' + id, optionsDelete).then(response => {\n      if (response.ok) {\n        // Успешное удаление данных\n        console.log('Данные успешно удалены');\n        handleGetData();\n      } else {\n        // Обработка ошибки, если требуется\n        console.log('Ошибка при удалении данных');\n      }\n    }).catch(error => {\n      // Обработка ошибки, если требуется\n      console.log('Ошибка при удалении данных:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ClientInfo, {\n        post: post,\n        handleDeleteData: handleDeleteData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n_s(List, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","useEffect","React","Component","ClientInfo","axios","ClientApiAxiosParamCreator","jsxDEV","_jsxDEV","List","_s","data","setData","f","apiClientGet","method","url","then","response","ok","json","catch","e","console","log","handleGetData","optionsGet","headers","handleDeleteData","id","optionsDelete","fetch","error","children","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Artem Nazmutdinov/vet_clinic_front/src/routes/contact.jsx"],"sourcesContent":["\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport React, { Component } from 'react'\r\nimport ClientInfo from \"../components/ClientInfo.tsx\";\r\nimport axios from 'axios';\r\nimport {ClientApiAxiosParamCreator} from '../json/api.ts';\r\n// import { Configuration } from '../json/configuration.ts';\r\n\r\n\r\n\r\n\r\n\r\nfunction List() {\r\n    \r\n    const [data, setData] = useState([]);\r\n    var f = ClientApiAxiosParamCreator(); // создаем API-клиент\r\n    // let b = new Promise((resolve, reject) => { // создаем обещание\r\n    // f.apiClientGet().then((result) => {  // получаем результат от функции\r\n    //     resolve(result); // возвращаем результат в обещание\r\n    // }).catch((error) => {\r\n    //     reject(error);\r\n    // });\r\n    // });\r\n    // b.then((data) => {\r\n    //     console.log(data);\r\n    // }); \r\n    // var f = ClientApiAxiosParamCreator();\r\n    // f.apiClientGet();\r\n    // console.log(f.apiClientGet());\r\n    apiClientGet({ method: 'GET', url: '/api/Client' })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        } else {\r\n            throw response;\r\n        }\r\n    })\r\n    .then(data => {\r\n        // Здесь data будет содержать полученные данные\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n    \r\n\r\n    const handleGetData = () => {\r\n\r\n        \r\n        const optionsGet = {\r\n        \r\n            method: 'GET',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            \r\n        };\r\n        \r\n    \r\n        // fetch('https://localhost:7205/api/Client', optionsGet)\r\n        //     // .then(response => response.json())\r\n        //     // .then(json => setData(json))\r\n        //     // .catch(console.error);\r\n        //     .then(response => response.json())\r\n        //     .then(json => setData(json))\r\n        //     .catch(error => {\r\n        //     // Обработка ошибок\r\n        //     console.error('Error:', error);\r\n        // });\r\n        // async function getData() {\r\n        //     try {\r\n        //         const response = await fetch('https://localhost:7205/api/Client', optionsGet);\r\n        //         const json = await response.json();\r\n        //         setData(json);\r\n        //     } catch (error) {\r\n        //         console.error('Error:', error);\r\n        //     }\r\n        // }\r\n        // getData();\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetData();\r\n    }, []);\r\n    \r\n    \r\n\r\n    const handleDeleteData = (id) => {\r\n        \r\n        \r\n        const optionsDelete = {\r\n        \r\n            method: 'DELETE',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            \r\n        };\r\n        console.log(id);\r\n        fetch('https://localhost:7205/api/Client/' + id, optionsDelete)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                // Успешное удаление данных\r\n                console.log('Данные успешно удалены');\r\n                handleGetData();\r\n                } else {\r\n                // Обработка ошибки, если требуется\r\n                console.log('Ошибка при удалении данных');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // Обработка ошибки, если требуется\r\n                console.log('Ошибка при удалении данных:', error);\r\n            });\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {data.map(post => \r\n                <div key = {post.id}>\r\n                    <ClientInfo post = {post} handleDeleteData={handleDeleteData}/>          \r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default List"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,0BAA0B,QAAO,gBAAgB;AACzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAIa,CAAC,GAAGP,0BAA0B,CAAC,CAAC,CAAC,CAAC;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAQ,YAAY,CAAC;IAAEC,MAAM,EAAE,KAAK;IAAEC,GAAG,EAAE;EAAc,CAAC,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC1B,CAAC,MAAM;MACH,MAAMF,QAAQ;IAClB;EACJ,CAAC,CAAC,CACDD,IAAI,CAACN,IAAI,IAAI;IACV;EAAA,CACH,CAAC,CACDU,KAAK,CAACC,CAAC,IAAI;IACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAClB,CAAC,CAAC;EAGF,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAGxB,MAAMC,UAAU,GAAG;MAEfX,MAAM,EAAE,KAAK;MACbY,OAAO,EAAE;QACT,cAAc,EAAE;MAChB;IAEJ,CAAC;;IAGD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEJ,CAAC;;EAED1B,SAAS,CAAC,MAAM;IACZwB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMG,gBAAgB,GAAIC,EAAE,IAAK;IAG7B,MAAMC,aAAa,GAAG;MAElBf,MAAM,EAAE,QAAQ;MAChBY,OAAO,EAAE;QACT,cAAc,EAAE;MAChB;IAEJ,CAAC;IACDJ,OAAO,CAACC,GAAG,CAACK,EAAE,CAAC;IACfE,KAAK,CAAC,oCAAoC,GAAGF,EAAE,EAAEC,aAAa,CAAC,CAC1Db,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACjB;QACAI,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCC,aAAa,CAAC,CAAC;MACf,CAAC,MAAM;QACP;QACAF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC;IACJ,CAAC,CAAC,CACDH,KAAK,CAACW,KAAK,IAAI;MACZ;MACAT,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEQ,KAAK,CAAC;IACrD,CAAC,CAAC;EACV,CAAC;EAGD,oBACIxB,OAAA;IAAAyB,QAAA,EACKtB,IAAI,CAACuB,GAAG,CAACC,IAAI,iBACV3B,OAAA;MAAAyB,QAAA,eACIzB,OAAA,CAACJ,UAAU;QAAC+B,IAAI,EAAIA,IAAK;QAACP,gBAAgB,EAAEA;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,GADvDJ,IAAI,CAACN,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC7B,EAAA,CAlHQD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAqHb,eAAeA,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}