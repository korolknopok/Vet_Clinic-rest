{"ast":null,"code":"import _classCallCheck from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _regeneratorRuntime from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";/* tslint:disable */ /* eslint-disable */ /**\n * Vet_Clinic-rest\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */import globalAxios from'axios';// Some imports not used depending on template conditions\n// @ts-ignore\nimport{DUMMY_BASE_URL,assertParamExists,setSearchParams,serializeDataIfNeeded,toPathString,createRequestFunction}from'./common.ts';// @ts-ignore\nimport{BASE_PATH,BaseAPI,operationServerMap}from'./base.ts';/**\n * \n * @export\n * @interface Client\n */ /**\n * \n * @export\n * @interface Veterinarians\n */ /**\n * ClientApi - axios parameter creator\n * @export\n */export var ClientApiAxiosParamCreator=function ClientApiAxiosParamCreator(configuration){return{/**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientGet:function(){var _apiClientGet=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var options,localVarPath,localVarUrlObj,baseOptions,localVarRequestOptions,localVarHeaderParameter,localVarQueryParameter,headersFromBaseOptions,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:options=_args.length>0&&_args[0]!==undefined?_args[0]:{};localVarPath=\"/api/Client\";// use dummy base URL string because the URL constructor only accepts absolute URLs.\nlocalVarUrlObj=new URL(localVarPath,DUMMY_BASE_URL);if(configuration){baseOptions=configuration.baseOptions;}localVarRequestOptions=_objectSpread(_objectSpread({method:'GET'},baseOptions),options);localVarHeaderParameter={};localVarQueryParameter={};setSearchParams(localVarUrlObj,localVarQueryParameter);headersFromBaseOptions=baseOptions&&baseOptions.headers?baseOptions.headers:{};localVarRequestOptions.headers=_objectSpread(_objectSpread(_objectSpread({},localVarHeaderParameter),headersFromBaseOptions),options.headers);return _context.abrupt(\"return\",{url:toPathString(localVarUrlObj),options:localVarRequestOptions});case 11:case\"end\":return _context.stop();}},_callee);}));function apiClientGet(){return _apiClientGet.apply(this,arguments);}return apiClientGet;}(),/**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientIdDelete:function(){var _apiClientIdDelete=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id){var options,localVarPath,localVarUrlObj,baseOptions,localVarRequestOptions,localVarHeaderParameter,localVarQueryParameter,headersFromBaseOptions,_args2=arguments;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:options=_args2.length>1&&_args2[1]!==undefined?_args2[1]:{};// verify required parameter 'id' is not null or undefined\nassertParamExists('apiClientIdDelete','id',id);localVarPath=\"/api/Client/{id}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));// use dummy base URL string because the URL constructor only accepts absolute URLs.\nlocalVarUrlObj=new URL(localVarPath,DUMMY_BASE_URL);if(configuration){baseOptions=configuration.baseOptions;}localVarRequestOptions=_objectSpread(_objectSpread({method:'DELETE'},baseOptions),options);localVarHeaderParameter={};localVarQueryParameter={};setSearchParams(localVarUrlObj,localVarQueryParameter);headersFromBaseOptions=baseOptions&&baseOptions.headers?baseOptions.headers:{};localVarRequestOptions.headers=_objectSpread(_objectSpread(_objectSpread({},localVarHeaderParameter),headersFromBaseOptions),options.headers);return _context2.abrupt(\"return\",{url:toPathString(localVarUrlObj),options:localVarRequestOptions});case 12:case\"end\":return _context2.stop();}},_callee2);}));function apiClientIdDelete(_x){return _apiClientIdDelete.apply(this,arguments);}return apiClientIdDelete;}(),/**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientIdGet:function(){var _apiClientIdGet=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id){var options,localVarPath,localVarUrlObj,baseOptions,localVarRequestOptions,localVarHeaderParameter,localVarQueryParameter,headersFromBaseOptions,_args3=arguments;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:options=_args3.length>1&&_args3[1]!==undefined?_args3[1]:{};// verify required parameter 'id' is not null or undefined\nassertParamExists('apiClientIdGet','id',id);localVarPath=\"/api/Client/{id}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));// use dummy base URL string because the URL constructor only accepts absolute URLs.\nlocalVarUrlObj=new URL(localVarPath,DUMMY_BASE_URL);if(configuration){baseOptions=configuration.baseOptions;}localVarRequestOptions=_objectSpread(_objectSpread({method:'GET'},baseOptions),options);localVarHeaderParameter={};localVarQueryParameter={};setSearchParams(localVarUrlObj,localVarQueryParameter);headersFromBaseOptions=baseOptions&&baseOptions.headers?baseOptions.headers:{};localVarRequestOptions.headers=_objectSpread(_objectSpread(_objectSpread({},localVarHeaderParameter),headersFromBaseOptions),options.headers);return _context3.abrupt(\"return\",{url:toPathString(localVarUrlObj),options:localVarRequestOptions});case 12:case\"end\":return _context3.stop();}},_callee3);}));function apiClientIdGet(_x2){return _apiClientIdGet.apply(this,arguments);}return apiClientIdGet;}(),/**\n         * \n         * @param {Client} [client] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientPost:function(){var _apiClientPost=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(client){var options,localVarPath,localVarUrlObj,baseOptions,localVarRequestOptions,localVarHeaderParameter,localVarQueryParameter,headersFromBaseOptions,_args4=arguments;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:options=_args4.length>1&&_args4[1]!==undefined?_args4[1]:{};localVarPath=\"/api/Client\";// use dummy base URL string because the URL constructor only accepts absolute URLs.\nlocalVarUrlObj=new URL(localVarPath,DUMMY_BASE_URL);if(configuration){baseOptions=configuration.baseOptions;}localVarRequestOptions=_objectSpread(_objectSpread({method:'POST'},baseOptions),options);localVarHeaderParameter={};localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';setSearchParams(localVarUrlObj,localVarQueryParameter);headersFromBaseOptions=baseOptions&&baseOptions.headers?baseOptions.headers:{};localVarRequestOptions.headers=_objectSpread(_objectSpread(_objectSpread({},localVarHeaderParameter),headersFromBaseOptions),options.headers);localVarRequestOptions.data=serializeDataIfNeeded(client,localVarRequestOptions,configuration);return _context4.abrupt(\"return\",{url:toPathString(localVarUrlObj),options:localVarRequestOptions});case 13:case\"end\":return _context4.stop();}},_callee4);}));function apiClientPost(_x3){return _apiClientPost.apply(this,arguments);}return apiClientPost;}()};};/**\n * ClientApi - functional programming interface\n * @export\n */export var ClientApiFp=function ClientApiFp(configuration){var localVarAxiosParamCreator=ClientApiAxiosParamCreator(configuration);return{/**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientGet:function apiClientGet(options){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var _configuration$server,_operationServerMap$C,_operationServerMap$C2;var localVarAxiosArgs,index,operationBasePath;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return localVarAxiosParamCreator.apiClientGet(options);case 2:localVarAxiosArgs=_context5.sent;index=(_configuration$server=configuration===null||configuration===void 0?void 0:configuration.serverIndex)!==null&&_configuration$server!==void 0?_configuration$server:0;operationBasePath=(_operationServerMap$C=operationServerMap['ClientApi.apiClientGet'])===null||_operationServerMap$C===void 0?void 0:(_operationServerMap$C2=_operationServerMap$C[index])===null||_operationServerMap$C2===void 0?void 0:_operationServerMap$C2.url;return _context5.abrupt(\"return\",function(axios,basePath){return createRequestFunction(localVarAxiosArgs,globalAxios,BASE_PATH,configuration)(axios,operationBasePath||basePath);});case 6:case\"end\":return _context5.stop();}},_callee5);}))();},/**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientIdDelete:function apiClientIdDelete(id,options){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var _configuration$server2,_operationServerMap$C3,_operationServerMap$C4;var localVarAxiosArgs,index,operationBasePath;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.next=2;return localVarAxiosParamCreator.apiClientIdDelete(id,options);case 2:localVarAxiosArgs=_context6.sent;index=(_configuration$server2=configuration===null||configuration===void 0?void 0:configuration.serverIndex)!==null&&_configuration$server2!==void 0?_configuration$server2:0;operationBasePath=(_operationServerMap$C3=operationServerMap['ClientApi.apiClientIdDelete'])===null||_operationServerMap$C3===void 0?void 0:(_operationServerMap$C4=_operationServerMap$C3[index])===null||_operationServerMap$C4===void 0?void 0:_operationServerMap$C4.url;return _context6.abrupt(\"return\",function(axios,basePath){return createRequestFunction(localVarAxiosArgs,globalAxios,BASE_PATH,configuration)(axios,operationBasePath||basePath);});case 6:case\"end\":return _context6.stop();}},_callee6);}))();},/**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientIdGet:function apiClientIdGet(id,options){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(){var _configuration$server3,_operationServerMap$C5,_operationServerMap$C6;var localVarAxiosArgs,index,operationBasePath;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:_context7.next=2;return localVarAxiosParamCreator.apiClientIdGet(id,options);case 2:localVarAxiosArgs=_context7.sent;index=(_configuration$server3=configuration===null||configuration===void 0?void 0:configuration.serverIndex)!==null&&_configuration$server3!==void 0?_configuration$server3:0;operationBasePath=(_operationServerMap$C5=operationServerMap['ClientApi.apiClientIdGet'])===null||_operationServerMap$C5===void 0?void 0:(_operationServerMap$C6=_operationServerMap$C5[index])===null||_operationServerMap$C6===void 0?void 0:_operationServerMap$C6.url;return _context7.abrupt(\"return\",function(axios,basePath){return createRequestFunction(localVarAxiosArgs,globalAxios,BASE_PATH,configuration)(axios,operationBasePath||basePath);});case 6:case\"end\":return _context7.stop();}},_callee7);}))();},/**\n         * \n         * @param {Client} [client] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientPost:function apiClientPost(client,options){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(){var _configuration$server4,_operationServerMap$C7,_operationServerMap$C8;var localVarAxiosArgs,index,operationBasePath;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:_context8.next=2;return localVarAxiosParamCreator.apiClientPost(client,options);case 2:localVarAxiosArgs=_context8.sent;index=(_configuration$server4=configuration===null||configuration===void 0?void 0:configuration.serverIndex)!==null&&_configuration$server4!==void 0?_configuration$server4:0;operationBasePath=(_operationServerMap$C7=operationServerMap['ClientApi.apiClientPost'])===null||_operationServerMap$C7===void 0?void 0:(_operationServerMap$C8=_operationServerMap$C7[index])===null||_operationServerMap$C8===void 0?void 0:_operationServerMap$C8.url;return _context8.abrupt(\"return\",function(axios,basePath){return createRequestFunction(localVarAxiosArgs,globalAxios,BASE_PATH,configuration)(axios,operationBasePath||basePath);});case 6:case\"end\":return _context8.stop();}},_callee8);}))();}};};/**\n * ClientApi - factory interface\n * @export\n */export var ClientApiFactory=function ClientApiFactory(configuration,basePath,axios){var localVarFp=ClientApiFp(configuration);return{/**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientGet:function apiClientGet(options){return localVarFp.apiClientGet(options).then(function(request){return request(axios,basePath);});},/**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientIdDelete:function apiClientIdDelete(id,options){return localVarFp.apiClientIdDelete(id,options).then(function(request){return request(axios,basePath);});},/**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientIdGet:function apiClientIdGet(id,options){return localVarFp.apiClientIdGet(id,options).then(function(request){return request(axios,basePath);});},/**\n         * \n         * @param {Client} [client] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiClientPost:function apiClientPost(client,options){return localVarFp.apiClientPost(client,options).then(function(request){return request(axios,basePath);});}};};/**\n * ClientApi - object-oriented interface\n * @export\n * @class ClientApi\n * @extends {BaseAPI}\n */export var ClientApi=/*#__PURE__*/function(_BaseAPI){_inherits(ClientApi,_BaseAPI);var _super=_createSuper(ClientApi);function ClientApi(){_classCallCheck(this,ClientApi);return _super.apply(this,arguments);}_createClass(ClientApi,[{key:\"apiClientGet\",value:/**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ClientApi\n     */function apiClientGet(options){var _this=this;return ClientApiFp(this.configuration).apiClientGet(options).then(function(request){return request(_this.axios,_this.basePath);});}/**\n     * \n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ClientApi\n     */},{key:\"apiClientIdDelete\",value:function apiClientIdDelete(id,options){var _this2=this;return ClientApiFp(this.configuration).apiClientIdDelete(id,options).then(function(request){return request(_this2.axios,_this2.basePath);});}/**\n     * \n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ClientApi\n     */},{key:\"apiClientIdGet\",value:function apiClientIdGet(id,options){var _this3=this;return ClientApiFp(this.configuration).apiClientIdGet(id,options).then(function(request){return request(_this3.axios,_this3.basePath);});}/**\n     * \n     * @param {Client} [client] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ClientApi\n     */},{key:\"apiClientPost\",value:function apiClientPost(client,options){var _this4=this;return ClientApiFp(this.configuration).apiClientPost(client,options).then(function(request){return request(_this4.axios,_this4.basePath);});}}]);return ClientApi;}(BaseAPI);/**\n * VeterinariansApi - axios parameter creator\n * @export\n */export var VeterinariansApiAxiosParamCreator=function VeterinariansApiAxiosParamCreator(configuration){return{/**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansGet:function(){var _apiVeterinariansGet=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(){var options,localVarPath,localVarUrlObj,baseOptions,localVarRequestOptions,localVarHeaderParameter,localVarQueryParameter,headersFromBaseOptions,_args9=arguments;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1)switch(_context9.prev=_context9.next){case 0:options=_args9.length>0&&_args9[0]!==undefined?_args9[0]:{};localVarPath=\"/api/Veterinarians\";// use dummy base URL string because the URL constructor only accepts absolute URLs.\nlocalVarUrlObj=new URL(localVarPath,DUMMY_BASE_URL);if(configuration){baseOptions=configuration.baseOptions;}localVarRequestOptions=_objectSpread(_objectSpread({method:'GET'},baseOptions),options);localVarHeaderParameter={};localVarQueryParameter={};setSearchParams(localVarUrlObj,localVarQueryParameter);headersFromBaseOptions=baseOptions&&baseOptions.headers?baseOptions.headers:{};localVarRequestOptions.headers=_objectSpread(_objectSpread(_objectSpread({},localVarHeaderParameter),headersFromBaseOptions),options.headers);return _context9.abrupt(\"return\",{url:toPathString(localVarUrlObj),options:localVarRequestOptions});case 11:case\"end\":return _context9.stop();}},_callee9);}));function apiVeterinariansGet(){return _apiVeterinariansGet.apply(this,arguments);}return apiVeterinariansGet;}(),/**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansIdDelete:function(){var _apiVeterinariansIdDelete=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(id){var options,localVarPath,localVarUrlObj,baseOptions,localVarRequestOptions,localVarHeaderParameter,localVarQueryParameter,headersFromBaseOptions,_args10=arguments;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1)switch(_context10.prev=_context10.next){case 0:options=_args10.length>1&&_args10[1]!==undefined?_args10[1]:{};// verify required parameter 'id' is not null or undefined\nassertParamExists('apiVeterinariansIdDelete','id',id);localVarPath=\"/api/Veterinarians/{id}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));// use dummy base URL string because the URL constructor only accepts absolute URLs.\nlocalVarUrlObj=new URL(localVarPath,DUMMY_BASE_URL);if(configuration){baseOptions=configuration.baseOptions;}localVarRequestOptions=_objectSpread(_objectSpread({method:'DELETE'},baseOptions),options);localVarHeaderParameter={};localVarQueryParameter={};setSearchParams(localVarUrlObj,localVarQueryParameter);headersFromBaseOptions=baseOptions&&baseOptions.headers?baseOptions.headers:{};localVarRequestOptions.headers=_objectSpread(_objectSpread(_objectSpread({},localVarHeaderParameter),headersFromBaseOptions),options.headers);return _context10.abrupt(\"return\",{url:toPathString(localVarUrlObj),options:localVarRequestOptions});case 12:case\"end\":return _context10.stop();}},_callee10);}));function apiVeterinariansIdDelete(_x4){return _apiVeterinariansIdDelete.apply(this,arguments);}return apiVeterinariansIdDelete;}(),/**\n         * \n         * @param {number} id \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansIdPut:function(){var _apiVeterinariansIdPut=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(id,veterinarians){var options,localVarPath,localVarUrlObj,baseOptions,localVarRequestOptions,localVarHeaderParameter,localVarQueryParameter,headersFromBaseOptions,_args11=arguments;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1)switch(_context11.prev=_context11.next){case 0:options=_args11.length>2&&_args11[2]!==undefined?_args11[2]:{};// verify required parameter 'id' is not null or undefined\nassertParamExists('apiVeterinariansIdPut','id',id);localVarPath=\"/api/Veterinarians/{id}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));// use dummy base URL string because the URL constructor only accepts absolute URLs.\nlocalVarUrlObj=new URL(localVarPath,DUMMY_BASE_URL);if(configuration){baseOptions=configuration.baseOptions;}localVarRequestOptions=_objectSpread(_objectSpread({method:'PUT'},baseOptions),options);localVarHeaderParameter={};localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';setSearchParams(localVarUrlObj,localVarQueryParameter);headersFromBaseOptions=baseOptions&&baseOptions.headers?baseOptions.headers:{};localVarRequestOptions.headers=_objectSpread(_objectSpread(_objectSpread({},localVarHeaderParameter),headersFromBaseOptions),options.headers);localVarRequestOptions.data=serializeDataIfNeeded(veterinarians,localVarRequestOptions,configuration);return _context11.abrupt(\"return\",{url:toPathString(localVarUrlObj),options:localVarRequestOptions});case 14:case\"end\":return _context11.stop();}},_callee11);}));function apiVeterinariansIdPut(_x5,_x6){return _apiVeterinariansIdPut.apply(this,arguments);}return apiVeterinariansIdPut;}(),/**\n         * \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansPost:function(){var _apiVeterinariansPost=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(veterinarians){var options,localVarPath,localVarUrlObj,baseOptions,localVarRequestOptions,localVarHeaderParameter,localVarQueryParameter,headersFromBaseOptions,_args12=arguments;return _regeneratorRuntime().wrap(function _callee12$(_context12){while(1)switch(_context12.prev=_context12.next){case 0:options=_args12.length>1&&_args12[1]!==undefined?_args12[1]:{};localVarPath=\"/api/Veterinarians\";// use dummy base URL string because the URL constructor only accepts absolute URLs.\nlocalVarUrlObj=new URL(localVarPath,DUMMY_BASE_URL);if(configuration){baseOptions=configuration.baseOptions;}localVarRequestOptions=_objectSpread(_objectSpread({method:'POST'},baseOptions),options);localVarHeaderParameter={};localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';setSearchParams(localVarUrlObj,localVarQueryParameter);headersFromBaseOptions=baseOptions&&baseOptions.headers?baseOptions.headers:{};localVarRequestOptions.headers=_objectSpread(_objectSpread(_objectSpread({},localVarHeaderParameter),headersFromBaseOptions),options.headers);localVarRequestOptions.data=serializeDataIfNeeded(veterinarians,localVarRequestOptions,configuration);return _context12.abrupt(\"return\",{url:toPathString(localVarUrlObj),options:localVarRequestOptions});case 13:case\"end\":return _context12.stop();}},_callee12);}));function apiVeterinariansPost(_x7){return _apiVeterinariansPost.apply(this,arguments);}return apiVeterinariansPost;}()};};/**\n * VeterinariansApi - functional programming interface\n * @export\n */export var VeterinariansApiFp=function VeterinariansApiFp(configuration){var localVarAxiosParamCreator=VeterinariansApiAxiosParamCreator(configuration);return{/**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansGet:function apiVeterinariansGet(options){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(){var _configuration$server5,_operationServerMap$V,_operationServerMap$V2;var localVarAxiosArgs,index,operationBasePath;return _regeneratorRuntime().wrap(function _callee13$(_context13){while(1)switch(_context13.prev=_context13.next){case 0:_context13.next=2;return localVarAxiosParamCreator.apiVeterinariansGet(options);case 2:localVarAxiosArgs=_context13.sent;index=(_configuration$server5=configuration===null||configuration===void 0?void 0:configuration.serverIndex)!==null&&_configuration$server5!==void 0?_configuration$server5:0;operationBasePath=(_operationServerMap$V=operationServerMap['VeterinariansApi.apiVeterinariansGet'])===null||_operationServerMap$V===void 0?void 0:(_operationServerMap$V2=_operationServerMap$V[index])===null||_operationServerMap$V2===void 0?void 0:_operationServerMap$V2.url;return _context13.abrupt(\"return\",function(axios,basePath){return createRequestFunction(localVarAxiosArgs,globalAxios,BASE_PATH,configuration)(axios,operationBasePath||basePath);});case 6:case\"end\":return _context13.stop();}},_callee13);}))();},/**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansIdDelete:function apiVeterinariansIdDelete(id,options){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(){var _configuration$server6,_operationServerMap$V3,_operationServerMap$V4;var localVarAxiosArgs,index,operationBasePath;return _regeneratorRuntime().wrap(function _callee14$(_context14){while(1)switch(_context14.prev=_context14.next){case 0:_context14.next=2;return localVarAxiosParamCreator.apiVeterinariansIdDelete(id,options);case 2:localVarAxiosArgs=_context14.sent;index=(_configuration$server6=configuration===null||configuration===void 0?void 0:configuration.serverIndex)!==null&&_configuration$server6!==void 0?_configuration$server6:0;operationBasePath=(_operationServerMap$V3=operationServerMap['VeterinariansApi.apiVeterinariansIdDelete'])===null||_operationServerMap$V3===void 0?void 0:(_operationServerMap$V4=_operationServerMap$V3[index])===null||_operationServerMap$V4===void 0?void 0:_operationServerMap$V4.url;return _context14.abrupt(\"return\",function(axios,basePath){return createRequestFunction(localVarAxiosArgs,globalAxios,BASE_PATH,configuration)(axios,operationBasePath||basePath);});case 6:case\"end\":return _context14.stop();}},_callee14);}))();},/**\n         * \n         * @param {number} id \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansIdPut:function apiVeterinariansIdPut(id,veterinarians,options){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(){var _configuration$server7,_operationServerMap$V5,_operationServerMap$V6;var localVarAxiosArgs,index,operationBasePath;return _regeneratorRuntime().wrap(function _callee15$(_context15){while(1)switch(_context15.prev=_context15.next){case 0:_context15.next=2;return localVarAxiosParamCreator.apiVeterinariansIdPut(id,veterinarians,options);case 2:localVarAxiosArgs=_context15.sent;index=(_configuration$server7=configuration===null||configuration===void 0?void 0:configuration.serverIndex)!==null&&_configuration$server7!==void 0?_configuration$server7:0;operationBasePath=(_operationServerMap$V5=operationServerMap['VeterinariansApi.apiVeterinariansIdPut'])===null||_operationServerMap$V5===void 0?void 0:(_operationServerMap$V6=_operationServerMap$V5[index])===null||_operationServerMap$V6===void 0?void 0:_operationServerMap$V6.url;return _context15.abrupt(\"return\",function(axios,basePath){return createRequestFunction(localVarAxiosArgs,globalAxios,BASE_PATH,configuration)(axios,operationBasePath||basePath);});case 6:case\"end\":return _context15.stop();}},_callee15);}))();},/**\n         * \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansPost:function apiVeterinariansPost(veterinarians,options){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(){var _configuration$server8,_operationServerMap$V7,_operationServerMap$V8;var localVarAxiosArgs,index,operationBasePath;return _regeneratorRuntime().wrap(function _callee16$(_context16){while(1)switch(_context16.prev=_context16.next){case 0:_context16.next=2;return localVarAxiosParamCreator.apiVeterinariansPost(veterinarians,options);case 2:localVarAxiosArgs=_context16.sent;index=(_configuration$server8=configuration===null||configuration===void 0?void 0:configuration.serverIndex)!==null&&_configuration$server8!==void 0?_configuration$server8:0;operationBasePath=(_operationServerMap$V7=operationServerMap['VeterinariansApi.apiVeterinariansPost'])===null||_operationServerMap$V7===void 0?void 0:(_operationServerMap$V8=_operationServerMap$V7[index])===null||_operationServerMap$V8===void 0?void 0:_operationServerMap$V8.url;return _context16.abrupt(\"return\",function(axios,basePath){return createRequestFunction(localVarAxiosArgs,globalAxios,BASE_PATH,configuration)(axios,operationBasePath||basePath);});case 6:case\"end\":return _context16.stop();}},_callee16);}))();}};};/**\n * VeterinariansApi - factory interface\n * @export\n */export var VeterinariansApiFactory=function VeterinariansApiFactory(configuration,basePath,axios){var localVarFp=VeterinariansApiFp(configuration);return{/**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansGet:function apiVeterinariansGet(options){return localVarFp.apiVeterinariansGet(options).then(function(request){return request(axios,basePath);});},/**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansIdDelete:function apiVeterinariansIdDelete(id,options){return localVarFp.apiVeterinariansIdDelete(id,options).then(function(request){return request(axios,basePath);});},/**\n         * \n         * @param {number} id \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansIdPut:function apiVeterinariansIdPut(id,veterinarians,options){return localVarFp.apiVeterinariansIdPut(id,veterinarians,options).then(function(request){return request(axios,basePath);});},/**\n         * \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */apiVeterinariansPost:function apiVeterinariansPost(veterinarians,options){return localVarFp.apiVeterinariansPost(veterinarians,options).then(function(request){return request(axios,basePath);});}};};/**\n * VeterinariansApi - object-oriented interface\n * @export\n * @class VeterinariansApi\n * @extends {BaseAPI}\n */export var VeterinariansApi=/*#__PURE__*/function(_BaseAPI2){_inherits(VeterinariansApi,_BaseAPI2);var _super2=_createSuper(VeterinariansApi);function VeterinariansApi(){_classCallCheck(this,VeterinariansApi);return _super2.apply(this,arguments);}_createClass(VeterinariansApi,[{key:\"apiVeterinariansGet\",value:/**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VeterinariansApi\n     */function apiVeterinariansGet(options){var _this5=this;return VeterinariansApiFp(this.configuration).apiVeterinariansGet(options).then(function(request){return request(_this5.axios,_this5.basePath);});}/**\n     * \n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VeterinariansApi\n     */},{key:\"apiVeterinariansIdDelete\",value:function apiVeterinariansIdDelete(id,options){var _this6=this;return VeterinariansApiFp(this.configuration).apiVeterinariansIdDelete(id,options).then(function(request){return request(_this6.axios,_this6.basePath);});}/**\n     * \n     * @param {number} id \n     * @param {Veterinarians} [veterinarians] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VeterinariansApi\n     */},{key:\"apiVeterinariansIdPut\",value:function apiVeterinariansIdPut(id,veterinarians,options){var _this7=this;return VeterinariansApiFp(this.configuration).apiVeterinariansIdPut(id,veterinarians,options).then(function(request){return request(_this7.axios,_this7.basePath);});}/**\n     * \n     * @param {Veterinarians} [veterinarians] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VeterinariansApi\n     */},{key:\"apiVeterinariansPost\",value:function apiVeterinariansPost(veterinarians,options){var _this8=this;return VeterinariansApiFp(this.configuration).apiVeterinariansPost(veterinarians,options).then(function(request){return request(_this8.axios,_this8.basePath);});}}]);return VeterinariansApi;}(BaseAPI);","map":{"version":3,"names":["globalAxios","DUMMY_BASE_URL","assertParamExists","setSearchParams","serializeDataIfNeeded","toPathString","createRequestFunction","BASE_PATH","BaseAPI","operationServerMap","ClientApiAxiosParamCreator","configuration","apiClientGet","_apiClientGet","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","localVarPath","localVarUrlObj","baseOptions","localVarRequestOptions","localVarHeaderParameter","localVarQueryParameter","headersFromBaseOptions","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","URL","_objectSpread","method","headers","abrupt","url","stop","apply","apiClientIdDelete","_apiClientIdDelete","_callee2","id","_args2","_callee2$","_context2","replace","concat","encodeURIComponent","String","_x","apiClientIdGet","_apiClientIdGet","_callee3","_args3","_callee3$","_context3","_x2","apiClientPost","_apiClientPost","_callee4","client","_args4","_callee4$","_context4","data","_x3","ClientApiFp","localVarAxiosParamCreator","_callee5","_configuration$server","_operationServerMap$C","_operationServerMap$C2","localVarAxiosArgs","index","operationBasePath","_callee5$","_context5","sent","serverIndex","axios","basePath","_callee6","_configuration$server2","_operationServerMap$C3","_operationServerMap$C4","_callee6$","_context6","_callee7","_configuration$server3","_operationServerMap$C5","_operationServerMap$C6","_callee7$","_context7","_callee8","_configuration$server4","_operationServerMap$C7","_operationServerMap$C8","_callee8$","_context8","ClientApiFactory","localVarFp","then","request","ClientApi","_BaseAPI","_inherits","_super","_createSuper","_classCallCheck","_createClass","key","value","_this","_this2","_this3","_this4","VeterinariansApiAxiosParamCreator","apiVeterinariansGet","_apiVeterinariansGet","_callee9","_args9","_callee9$","_context9","apiVeterinariansIdDelete","_apiVeterinariansIdDelete","_callee10","_args10","_callee10$","_context10","_x4","apiVeterinariansIdPut","_apiVeterinariansIdPut","_callee11","veterinarians","_args11","_callee11$","_context11","_x5","_x6","apiVeterinariansPost","_apiVeterinariansPost","_callee12","_args12","_callee12$","_context12","_x7","VeterinariansApiFp","_callee13","_configuration$server5","_operationServerMap$V","_operationServerMap$V2","_callee13$","_context13","_callee14","_configuration$server6","_operationServerMap$V3","_operationServerMap$V4","_callee14$","_context14","_callee15","_configuration$server7","_operationServerMap$V5","_operationServerMap$V6","_callee15$","_context15","_callee16","_configuration$server8","_operationServerMap$V7","_operationServerMap$V8","_callee16$","_context16","VeterinariansApiFactory","VeterinariansApi","_BaseAPI2","_super2","_this5","_this6","_this7","_this8"],"sources":["C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/src/json/api.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Vet_Clinic-rest\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport type { Configuration } from './configuration.ts';\nimport type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport globalAxios from 'axios';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common.ts';\nimport type { RequestArgs } from './base.ts';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError, operationServerMap } from './base.ts';\n\n/**\n * \n * @export\n * @interface Client\n */\nexport interface Client {\n    /**\n     * \n     * @type {number}\n     * @memberof Client\n     */\n    'id'?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Client\n     */\n    'name'?: string | null;\n    /**\n     * \n     * @type {string}\n     * @memberof Client\n     */\n    'phoneNumber'?: string | null;\n}\n/**\n * \n * @export\n * @interface Veterinarians\n */\nexport interface Veterinarians {\n    /**\n     * \n     * @type {number}\n     * @memberof Veterinarians\n     */\n    'id'?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Veterinarians\n     */\n    'name'?: string | null;\n    /**\n     * \n     * @type {string}\n     * @memberof Veterinarians\n     */\n    'dateOfBirth'?: string | null;\n    /**\n     * \n     * @type {string}\n     * @memberof Veterinarians\n     */\n    'phoneNumber'?: string | null;\n    /**\n     * \n     * @type {string}\n     * @memberof Veterinarians\n     */\n    'education'?: string | null;\n}\n\n/**\n * ClientApi - axios parameter creator\n * @export\n */\nexport const ClientApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiClientGet: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Client`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiClientIdDelete: async (id: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            assertParamExists('apiClientIdDelete', 'id', id)\n            const localVarPath = `/api/Client/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiClientIdGet: async (id: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            assertParamExists('apiClientIdGet', 'id', id)\n            const localVarPath = `/api/Client/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {Client} [client] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiClientPost: async (client?: Client, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Client`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(client, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * ClientApi - functional programming interface\n * @export\n */\nexport const ClientApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = ClientApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async apiClientGet(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.apiClientGet(options);\n            const index = configuration?.serverIndex ?? 0;\n            const operationBasePath = operationServerMap['ClientApi.apiClientGet']?.[index]?.url;\n            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, operationBasePath || basePath);\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async apiClientIdDelete(id: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.apiClientIdDelete(id, options);\n            const index = configuration?.serverIndex ?? 0;\n            const operationBasePath = operationServerMap['ClientApi.apiClientIdDelete']?.[index]?.url;\n            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, operationBasePath || basePath);\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async apiClientIdGet(id: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.apiClientIdGet(id, options);\n            const index = configuration?.serverIndex ?? 0;\n            const operationBasePath = operationServerMap['ClientApi.apiClientIdGet']?.[index]?.url;\n            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, operationBasePath || basePath);\n        },\n        /**\n         * \n         * @param {Client} [client] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async apiClientPost(client?: Client, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.apiClientPost(client, options);\n            const index = configuration?.serverIndex ?? 0;\n            const operationBasePath = operationServerMap['ClientApi.apiClientPost']?.[index]?.url;\n            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, operationBasePath || basePath);\n        },\n    }\n};\n\n/**\n * ClientApi - factory interface\n * @export\n */\nexport const ClientApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = ClientApiFp(configuration)\n    return {\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiClientGet(options?: any): AxiosPromise<void> {\n            return localVarFp.apiClientGet(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiClientIdDelete(id: number, options?: any): AxiosPromise<void> {\n            return localVarFp.apiClientIdDelete(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiClientIdGet(id: number, options?: any): AxiosPromise<void> {\n            return localVarFp.apiClientIdGet(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {Client} [client] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiClientPost(client?: Client, options?: any): AxiosPromise<void> {\n            return localVarFp.apiClientPost(client, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * ClientApi - object-oriented interface\n * @export\n * @class ClientApi\n * @extends {BaseAPI}\n */\nexport class ClientApi extends BaseAPI {\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ClientApi\n     */\n    public apiClientGet(options?: AxiosRequestConfig) {\n        return ClientApiFp(this.configuration).apiClientGet(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ClientApi\n     */\n    public apiClientIdDelete(id: number, options?: AxiosRequestConfig) {\n        return ClientApiFp(this.configuration).apiClientIdDelete(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ClientApi\n     */\n    public apiClientIdGet(id: number, options?: AxiosRequestConfig) {\n        return ClientApiFp(this.configuration).apiClientIdGet(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {Client} [client] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ClientApi\n     */\n    public apiClientPost(client?: Client, options?: AxiosRequestConfig) {\n        return ClientApiFp(this.configuration).apiClientPost(client, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n\n/**\n * VeterinariansApi - axios parameter creator\n * @export\n */\nexport const VeterinariansApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiVeterinariansGet: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Veterinarians`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiVeterinariansIdDelete: async (id: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            assertParamExists('apiVeterinariansIdDelete', 'id', id)\n            const localVarPath = `/api/Veterinarians/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiVeterinariansIdPut: async (id: number, veterinarians?: Veterinarians, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            assertParamExists('apiVeterinariansIdPut', 'id', id)\n            const localVarPath = `/api/Veterinarians/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(veterinarians, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiVeterinariansPost: async (veterinarians?: Veterinarians, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Veterinarians`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(veterinarians, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * VeterinariansApi - functional programming interface\n * @export\n */\nexport const VeterinariansApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = VeterinariansApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async apiVeterinariansGet(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.apiVeterinariansGet(options);\n            const index = configuration?.serverIndex ?? 0;\n            const operationBasePath = operationServerMap['VeterinariansApi.apiVeterinariansGet']?.[index]?.url;\n            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, operationBasePath || basePath);\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async apiVeterinariansIdDelete(id: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.apiVeterinariansIdDelete(id, options);\n            const index = configuration?.serverIndex ?? 0;\n            const operationBasePath = operationServerMap['VeterinariansApi.apiVeterinariansIdDelete']?.[index]?.url;\n            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, operationBasePath || basePath);\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async apiVeterinariansIdPut(id: number, veterinarians?: Veterinarians, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.apiVeterinariansIdPut(id, veterinarians, options);\n            const index = configuration?.serverIndex ?? 0;\n            const operationBasePath = operationServerMap['VeterinariansApi.apiVeterinariansIdPut']?.[index]?.url;\n            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, operationBasePath || basePath);\n        },\n        /**\n         * \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async apiVeterinariansPost(veterinarians?: Veterinarians, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.apiVeterinariansPost(veterinarians, options);\n            const index = configuration?.serverIndex ?? 0;\n            const operationBasePath = operationServerMap['VeterinariansApi.apiVeterinariansPost']?.[index]?.url;\n            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, operationBasePath || basePath);\n        },\n    }\n};\n\n/**\n * VeterinariansApi - factory interface\n * @export\n */\nexport const VeterinariansApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = VeterinariansApiFp(configuration)\n    return {\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiVeterinariansGet(options?: any): AxiosPromise<void> {\n            return localVarFp.apiVeterinariansGet(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiVeterinariansIdDelete(id: number, options?: any): AxiosPromise<void> {\n            return localVarFp.apiVeterinariansIdDelete(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiVeterinariansIdPut(id: number, veterinarians?: Veterinarians, options?: any): AxiosPromise<void> {\n            return localVarFp.apiVeterinariansIdPut(id, veterinarians, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {Veterinarians} [veterinarians] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiVeterinariansPost(veterinarians?: Veterinarians, options?: any): AxiosPromise<void> {\n            return localVarFp.apiVeterinariansPost(veterinarians, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * VeterinariansApi - object-oriented interface\n * @export\n * @class VeterinariansApi\n * @extends {BaseAPI}\n */\nexport class VeterinariansApi extends BaseAPI {\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VeterinariansApi\n     */\n    public apiVeterinariansGet(options?: AxiosRequestConfig) {\n        return VeterinariansApiFp(this.configuration).apiVeterinariansGet(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VeterinariansApi\n     */\n    public apiVeterinariansIdDelete(id: number, options?: AxiosRequestConfig) {\n        return VeterinariansApiFp(this.configuration).apiVeterinariansIdDelete(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id \n     * @param {Veterinarians} [veterinarians] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VeterinariansApi\n     */\n    public apiVeterinariansIdPut(id: number, veterinarians?: Veterinarians, options?: AxiosRequestConfig) {\n        return VeterinariansApiFp(this.configuration).apiVeterinariansIdPut(id, veterinarians, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {Veterinarians} [veterinarians] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VeterinariansApi\n     */\n    public apiVeterinariansPost(veterinarians?: Veterinarians, options?: AxiosRequestConfig) {\n        return VeterinariansApiFp(this.configuration).apiVeterinariansPost(veterinarians, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}