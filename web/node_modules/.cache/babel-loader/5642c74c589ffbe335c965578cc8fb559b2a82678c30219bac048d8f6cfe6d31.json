{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{VeterinariansApiAxiosParamCreator,VeterinariansApiFactory}from'../json/api.ts';import{useState}from'react';import{useEffect}from'react';import VeterinariansInfo from\"../components/VeterinariansInfo.tsx\";import{error}from'console';import*as console from\"console\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var functionFromApi=VeterinariansApiFactory();function Veterinarians(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];function getVetDataFromApi(){return _getVetDataFromApi.apply(this,arguments);}function _getVetDataFromApi(){_getVetDataFromApi=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return functionFromApi.apiVeterinariansGet();case 2:response=_context.sent;data=response.data;setData(data);case 5:case\"end\":return _context.stop();}},_callee);}));return _getVetDataFromApi.apply(this,arguments);}useEffect(function(){getVetDataFromApi();},[]);var handleDeleteVetData=function handleDeleteVetData(id){console.log(id);functionFromApi.apiVeterinariansIdDelete(id).then(function(response){if(response.status==200){// Успешное удаление данных\nconsole.log('Данные успешно удалены');getVetDataFromApi();}else{// Обработка ошибки, если требуется\nconsole.log('Ошибка при удалении данных');}}).catch(function(error){// Обработка ошибки, если требуется\nconsole.log('Ошибка при удалении данных:',error);});};// const handlePutVetData = (id) => {\n//     functionFromApi.apiVeterinariansIdPut(id)\n//         .then(response => {\n//             if(response.status == 200) {\n//                 //Успешное изменение данных\n//                 console.log('Данные успешно обновлены');\n//                 getVetDataFromApi();\n//             } else {\n//                 // Обработка ошибки, если требуется\n//                 console.log('Ошибка при изменение данных');\n//             }\n//         })\n//         .catch(error => {\n//             //Обработка ошибки, если требуется\n//             console.log('Ошибка при изменение данных', error);\n//         });\n// }\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[\"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0432\\u0435\\u0442\\u0435\\u0440\\u0438\\u043D\\u0430\\u0440\\u043E\\u0432:\",/*#__PURE__*/_jsx(\"div\",{children:data.map(function(post){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(VeterinariansInfo,{post:post,handleDeleteVetData:handleDeleteVetData})},post.id);})})]});}export default Veterinarians;","map":{"version":3,"names":["React","VeterinariansApiAxiosParamCreator","VeterinariansApiFactory","useState","useEffect","VeterinariansInfo","error","console","jsx","_jsx","jsxs","_jsxs","functionFromApi","Veterinarians","_useState","_useState2","_slicedToArray","data","setData","getVetDataFromApi","_getVetDataFromApi","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","apiVeterinariansGet","sent","stop","handleDeleteVetData","id","log","apiVeterinariansIdDelete","then","status","catch","children","map","post"],"sources":["C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/src/components/Veterinarians.jsx"],"sourcesContent":["import React from 'react'\r\nimport {VeterinariansApiAxiosParamCreator, VeterinariansApiFactory} from '../json/api.ts';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport VeterinariansInfo from \"../components/VeterinariansInfo.tsx\";\r\nimport { error } from 'console';\r\nimport * as console from \"console\";\r\n\r\n\r\nvar functionFromApi = VeterinariansApiFactory(); \r\nfunction Veterinarians() {\r\n    \r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    async function getVetDataFromApi() {\r\n        const response = await functionFromApi.apiVeterinariansGet();\r\n        const { data } = response;\r\n        setData(data);\r\n    }\r\n    useEffect(() => {\r\n        getVetDataFromApi();\r\n    }, []);\r\n\r\n    const handleDeleteVetData = (id) => {\r\n        console.log(id);\r\n        functionFromApi.apiVeterinariansIdDelete(id)\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    // Успешное удаление данных\r\n                    console.log('Данные успешно удалены');\r\n                    getVetDataFromApi();\r\n                } else {\r\n                    // Обработка ошибки, если требуется\r\n                    console.log('Ошибка при удалении данных');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // Обработка ошибки, если требуется\r\n                console.log('Ошибка при удалении данных:', error);\r\n            });\r\n    }\r\n\r\n    // const handlePutVetData = (id) => {\r\n        \r\n    //     functionFromApi.apiVeterinariansIdPut(id)\r\n    //         .then(response => {\r\n    //             if(response.status == 200) {\r\n    //                 //Успешное изменение данных\r\n    //                 console.log('Данные успешно обновлены');\r\n    //                 getVetDataFromApi();\r\n    //             } else {\r\n    //                 // Обработка ошибки, если требуется\r\n    //                 console.log('Ошибка при изменение данных');\r\n    //             }\r\n    //         })\r\n    //         .catch(error => {\r\n    //             //Обработка ошибки, если требуется\r\n    //             console.log('Ошибка при изменение данных', error);\r\n    //         });\r\n    // }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            Список ветеринаров:\r\n            <div>\r\n                {data.map(post => \r\n                    <div key = {post.id}>\r\n                        <VeterinariansInfo post = {post} handleDeleteVetData={handleDeleteVetData}/>    \r\n                        {/* <VeterinariansInfo post = {post} handlePutVetData = {handlePutVetData}  />     */}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Veterinarians\r\n"],"mappings":"mcAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAAQC,iCAAiC,CAAEC,uBAAuB,KAAO,gBAAgB,CACzF,OAASC,QAAQ,KAAQ,OAAO,CAChC,OAASC,SAAS,KAAQ,OAAO,CACjC,MAAO,CAAAC,iBAAiB,KAAM,qCAAqC,CACnE,OAASC,KAAK,KAAQ,SAAS,CAC/B,MAAO,GAAK,CAAAC,OAAO,KAAM,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGnC,GAAI,CAAAC,eAAe,CAAGV,uBAAuB,CAAC,CAAC,CAC/C,QAAS,CAAAW,aAAaA,CAAA,CAAG,CAGrB,IAAAC,SAAA,CAAwBX,QAAQ,CAAC,EAAE,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAAiB,QAEtB,CAAAI,iBAAiBA,CAAA,SAAAC,kBAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,mBAAA,EAAAA,kBAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAhC,SAAAC,QAAA,MAAAC,QAAA,CAAAV,IAAA,QAAAO,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SAC2B,CAAApB,eAAe,CAACqB,mBAAmB,CAAC,CAAC,QAAtDN,QAAQ,CAAAG,QAAA,CAAAI,IAAA,CACNjB,IAAI,CAAKU,QAAQ,CAAjBV,IAAI,CACZC,OAAO,CAACD,IAAI,CAAC,CAAC,wBAAAa,QAAA,CAAAK,IAAA,MAAAT,OAAA,GACjB,UAAAN,kBAAA,CAAAC,KAAA,MAAAC,SAAA,GACDlB,SAAS,CAAC,UAAM,CACZe,iBAAiB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAiB,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAIC,EAAE,CAAK,CAChC9B,OAAO,CAAC+B,GAAG,CAACD,EAAE,CAAC,CACfzB,eAAe,CAAC2B,wBAAwB,CAACF,EAAE,CAAC,CACvCG,IAAI,CAAC,SAAAb,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAACc,MAAM,EAAI,GAAG,CAAE,CACxB;AACAlC,OAAO,CAAC+B,GAAG,CAAC,wBAAwB,CAAC,CACrCnB,iBAAiB,CAAC,CAAC,CACvB,CAAC,IAAM,CACH;AACAZ,OAAO,CAAC+B,GAAG,CAAC,4BAA4B,CAAC,CAC7C,CACJ,CAAC,CAAC,CACDI,KAAK,CAAC,SAAApC,KAAK,CAAI,CACZ;AACAC,OAAO,CAAC+B,GAAG,CAAC,6BAA6B,CAAEhC,KAAK,CAAC,CACrD,CAAC,CAAC,CACV,CAAC,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,mBACIK,KAAA,QAAAgC,QAAA,EAAK,0GAED,cAAAlC,IAAA,QAAAkC,QAAA,CACK1B,IAAI,CAAC2B,GAAG,CAAC,SAAAC,IAAI,qBACVpC,IAAA,QAAAkC,QAAA,cACIlC,IAAA,CAACJ,iBAAiB,EAACwC,IAAI,CAAIA,IAAK,CAACT,mBAAmB,CAAEA,mBAAoB,CAAC,CAAC,EADpES,IAAI,CAACR,EAGZ,CAAC,EACV,CAAC,CACA,CAAC,EACL,CAAC,CAEd,CAEA,cAAe,CAAAxB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}