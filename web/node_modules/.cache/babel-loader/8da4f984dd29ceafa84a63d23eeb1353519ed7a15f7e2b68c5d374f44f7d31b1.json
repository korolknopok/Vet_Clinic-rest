{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artem Nazmutdinov\\\\vet_clinic_front\\\\src\\\\routes\\\\contact.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport React, { Component } from 'react';\nimport ClientInfo from \"../components/ClientInfo.tsx\";\nimport axios from 'axios';\nimport { ClientApiAxiosParamCreator } from '../json/api.ts';\n// import { Configuration } from '../json/configuration.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List() {\n  _s();\n  const [data, setData] = useState([]);\n  const axios = require(\"axios\");\n  const ClientApiAxiosParamCreator = require(\"path/to/your/module\");\n  let f = new ClientApiAxiosParamCreator({\n    url: \"http://example.com\",\n    method: \"GET\",\n    params: {\n      foo: \"bar\"\n    }\n  });\n  let b = new Promise((resolve, reject) => {\n    f.apiClientGet().then(result => resolve(result)).catch(error => reject(error));\n  });\n  b.then(data => console.log(data));\n  const handleGetData = () => {\n    const optionsGet = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // fetch('https://localhost:7205/api/Client', optionsGet)\n    //     // .then(response => response.json())\n    //     // .then(json => setData(json))\n    //     // .catch(console.error);\n    //     .then(response => response.json())\n    //     .then(json => setData(json))\n    //     .catch(error => {\n    //     // Обработка ошибок\n    //     console.error('Error:', error);\n    // });\n  };\n\n  // useEffect(() => {\n  //     handleGetData();\n  // }, []);\n\n  // async function main() {\n  //     try {\n  //         const result = await handleGetData();\n  //         console.log(result);\n  //     }\n  //     catch (error) {\n  //         console.log(error);\n  //     }\n  // }\n  // main();\n\n  const handleDeleteData = id => {\n    const optionsDelete = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    console.log(id);\n    fetch('https://localhost:7205/api/Client/' + id, optionsDelete).then(response => {\n      if (response.ok) {\n        // Успешное удаление данных\n        console.log('Данные успешно удалены');\n        handleGetData();\n      } else {\n        // Обработка ошибки, если требуется\n        console.log('Ошибка при удалении данных');\n      }\n    }).catch(error => {\n      // Обработка ошибки, если требуется\n      console.log('Ошибка при удалении данных:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ClientInfo, {\n        post: post,\n        handleDeleteData: handleDeleteData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(List, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","useEffect","React","Component","ClientInfo","axios","ClientApiAxiosParamCreator","jsxDEV","_jsxDEV","List","_s","data","setData","require","f","url","method","params","foo","b","Promise","resolve","reject","apiClientGet","then","result","catch","error","console","log","handleGetData","optionsGet","headers","handleDeleteData","id","optionsDelete","fetch","response","ok","children","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Artem Nazmutdinov/vet_clinic_front/src/routes/contact.jsx"],"sourcesContent":["\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport React, { Component } from 'react'\r\nimport ClientInfo from \"../components/ClientInfo.tsx\";\r\nimport axios from 'axios';\r\nimport {ClientApiAxiosParamCreator} from '../json/api.ts';\r\n// import { Configuration } from '../json/configuration.ts';\r\n\r\n\r\n\r\n\r\n\r\nfunction List() {\r\n    \r\n    const [data, setData] = useState([]);\r\n    const axios = require(\"axios\");\r\n\r\nconst ClientApiAxiosParamCreator = require(\"path/to/your/module\");\r\n\r\nlet f = new ClientApiAxiosParamCreator({\r\n  url: \"http://example.com\",\r\n  method: \"GET\",\r\n  params: {\r\n    foo: \"bar\",\r\n  }\r\n});\r\n\r\nlet b = new Promise((resolve, reject) => {\r\n  f\r\n    .apiClientGet()\r\n    .then((result) => resolve(result))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nb.then((data) => console.log(data));\r\n    \r\n\r\n    const handleGetData = () => {\r\n\r\n        \r\n        const optionsGet = {\r\n        \r\n            method: 'GET',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            \r\n        };\r\n    \r\n        // fetch('https://localhost:7205/api/Client', optionsGet)\r\n        //     // .then(response => response.json())\r\n        //     // .then(json => setData(json))\r\n        //     // .catch(console.error);\r\n        //     .then(response => response.json())\r\n        //     .then(json => setData(json))\r\n        //     .catch(error => {\r\n        //     // Обработка ошибок\r\n        //     console.error('Error:', error);\r\n        // });\r\n        \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     handleGetData();\r\n    // }, []);\r\n\r\n    // async function main() {\r\n    //     try {\r\n    //         const result = await handleGetData();\r\n    //         console.log(result);\r\n    //     }\r\n    //     catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n    // main();\r\n    \r\n    \r\n\r\n    const handleDeleteData = (id) => {\r\n        \r\n        \r\n        const optionsDelete = {\r\n        \r\n            method: 'DELETE',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            \r\n        };\r\n        console.log(id);\r\n        fetch('https://localhost:7205/api/Client/' + id, optionsDelete)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                // Успешное удаление данных\r\n                console.log('Данные успешно удалены');\r\n                handleGetData();\r\n                } else {\r\n                // Обработка ошибки, если требуется\r\n                console.log('Ошибка при удалении данных');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // Обработка ошибки, если требуется\r\n                console.log('Ошибка при удалении данных:', error);\r\n            });\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {data.map(post => \r\n                <div key = {post.id}>\r\n                    <ClientInfo post = {post} handleDeleteData={handleDeleteData}/>          \r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default List"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,0BAA0B,QAAO,gBAAgB;AACzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMK,KAAK,GAAGQ,OAAO,CAAC,OAAO,CAAC;EAElC,MAAMP,0BAA0B,GAAGO,OAAO,CAAC,qBAAqB,CAAC;EAEjE,IAAIC,CAAC,GAAG,IAAIR,0BAA0B,CAAC;IACrCS,GAAG,EAAE,oBAAoB;IACzBC,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE;MACNC,GAAG,EAAE;IACP;EACF,CAAC,CAAC;EAEF,IAAIC,CAAC,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACvCR,CAAC,CACES,YAAY,CAAC,CAAC,CACdC,IAAI,CAAEC,MAAM,IAAKJ,OAAO,CAACI,MAAM,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKL,MAAM,CAACK,KAAK,CAAC,CAAC;EACpC,CAAC,CAAC;EAEFR,CAAC,CAACK,IAAI,CAAEb,IAAI,IAAKiB,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAC,CAAC;EAG/B,MAAMmB,aAAa,GAAGA,CAAA,KAAM;IAGxB,MAAMC,UAAU,GAAG;MAEff,MAAM,EAAE,KAAK;MACbgB,OAAO,EAAE;QACT,cAAc,EAAE;MAChB;IAEJ,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEJ,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA,MAAMC,gBAAgB,GAAIC,EAAE,IAAK;IAG7B,MAAMC,aAAa,GAAG;MAElBnB,MAAM,EAAE,QAAQ;MAChBgB,OAAO,EAAE;QACT,cAAc,EAAE;MAChB;IAEJ,CAAC;IACDJ,OAAO,CAACC,GAAG,CAACK,EAAE,CAAC;IACfE,KAAK,CAAC,oCAAoC,GAAGF,EAAE,EAAEC,aAAa,CAAC,CAC1DX,IAAI,CAACa,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACjB;QACAV,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCC,aAAa,CAAC,CAAC;MACf,CAAC,MAAM;QACP;QACAF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC;IACJ,CAAC,CAAC,CACDH,KAAK,CAACC,KAAK,IAAI;MACZ;MACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;IACrD,CAAC,CAAC;EACV,CAAC;EAGD,oBACInB,OAAA;IAAA+B,QAAA,EACK5B,IAAI,CAAC6B,GAAG,CAACC,IAAI,iBACVjC,OAAA;MAAA+B,QAAA,eACI/B,OAAA,CAACJ,UAAU;QAACqC,IAAI,EAAIA,IAAK;QAACR,gBAAgB,EAAEA;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,GADvDJ,IAAI,CAACP,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACnC,EAAA,CA1GQD,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AA6Gb,eAAeA,IAAI;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}