{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artem Nazmutdinov\\\\source\\\\repos\\\\Vet_Clinic-rest\\\\web\\\\src\\\\routes\\\\SelectVeter.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import {VeterinariansApiFactory} from '../json/api.ts';\n\n// const SelectVeter = () => {\n//     const [data, setData]: any  = useState([]);\n//     const [names, setNames] = useState([]);\n//     var functionFromApi = VeterinariansApiFactory(); \n//     async function getVetDataFromApi() {\n//         const response = await fetch('https://localhost:7205/api/Veterinarians');\n//         const { data } = response;\n//         setData(data);\n//     }\n//     useEffect(() => {\n//         getVetDataFromApi();\n//     }, []);\n\n//     return (\n//         <select>\n//         {names.map((name, index) => (\n//             <option key={index} value={name}>{name}</option>\n//         ))}\n//         </select>\n//     );\n// };\n\n// export default SelectVeter;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectVeter = () => {\n  _s();\n  const [names, setNames] = useState([]);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Получите имена из другого компонента, связанного с базой данных\n    // и установите их в состояние\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.example.com/names');\n        const data = await response.json();\n        setNames(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    children: names.map((name, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: name,\n      children: name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectVeter, \"lfIMuK5TRcGiGjbPurYE/TM33tw=\");\n_c = SelectVeter;\nexport default SelectVeter;\nvar _c;\n$RefreshReg$(_c, \"SelectVeter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SelectVeter","_s","names","setNames","data","setData","fetchData","response","fetch","json","error","console","log","children","map","name","index","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/src/routes/SelectVeter.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import {VeterinariansApiFactory} from '../json/api.ts';\r\n\r\n// const SelectVeter = () => {\r\n//     const [data, setData]: any  = useState([]);\r\n//     const [names, setNames] = useState([]);\r\n//     var functionFromApi = VeterinariansApiFactory(); \r\n//     async function getVetDataFromApi() {\r\n//         const response = await fetch('https://localhost:7205/api/Veterinarians');\r\n//         const { data } = response;\r\n//         setData(data);\r\n//     }\r\n//     useEffect(() => {\r\n//         getVetDataFromApi();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <select>\r\n//         {names.map((name, index) => (\r\n//             <option key={index} value={name}>{name}</option>\r\n//         ))}\r\n//         </select>\r\n//     );\r\n// };\r\n\r\n// export default SelectVeter;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst SelectVeter = () => {\r\n    const [names, setNames] = useState([]);\r\n    const [data, setData]: any  = useState([]);   \r\n    useEffect(() => {\r\n        // Получите имена из другого компонента, связанного с базой данных\r\n        // и установите их в состояние\r\n        const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('https://api.example.com/names');\r\n            const data = await response.json();\r\n            setNames(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <select>\r\n        {names.map((name, index) => (\r\n            <option key={index} value={name}>{name}</option>\r\n        ))}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default SelectVeter;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAM,GAAIT,QAAQ,CAAC,EAAE,CAAC;EAC1CC,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAC7D,MAAMJ,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCN,QAAQ,CAACC,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACA,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAc,QAAA,EACCX,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBjB,OAAA;MAAoBkB,KAAK,EAAEF,IAAK;MAAAF,QAAA,EAAEE;IAAI,GAAzBC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6B,CAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEjB,CAAC;AAACpB,EAAA,CA1BID,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}