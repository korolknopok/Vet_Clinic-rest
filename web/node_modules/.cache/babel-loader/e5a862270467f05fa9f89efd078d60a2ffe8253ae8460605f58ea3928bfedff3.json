{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.params = void 0;\nvar _toParameterPattern = require(\"./_/to-parameter-pattern\");\nconst params = (template, patterns) => {\n  const notFound = null;\n  const pathPattern = toPathPattern(template);\n  const parameterPattern = (0, _toParameterPattern.toParameterPattern)(template, patterns);\n  return pathname => {\n    const vs = matchPathPattern(pathname, pathPattern);\n    if (vs === null) return notFound;\n    const npvs = matchParameterPattern(vs, parameterPattern);\n    if (npvs === null) return notFound;\n    return toParameters(npvs);\n  };\n};\nexports.params = params;\nconst toParameters = npvs => {\n  return npvs.map(({\n    name,\n    value\n  }) => ({\n    [name]: value\n  })).reduce((a, x) => Object.assign(a, x), {});\n};\nconst matchParameterPattern = (parameterValues, parameterPattern) => {\n  const npvs = parameterValues.map(({\n    value\n  }) => decodeURIComponent(value)).map((value, i) => {\n    const {\n      name,\n      pattern\n    } = parameterPattern[i];\n    return {\n      name,\n      pattern,\n      value\n    };\n  });\n  const hasUnmatchParameter = npvs.some(({\n    pattern,\n    value\n  }) => {\n    return pattern !== null && value.match(pattern) === null;\n  });\n  if (hasUnmatchParameter) return null;\n  const hasInvalidDuplicatedParameter = npvs.some(({\n    name,\n    value\n  }) => {\n    return npvs.some(({\n      name: n,\n      value: v\n    }) => n === name && v !== value);\n  });\n  if (hasInvalidDuplicatedParameter) return null;\n  return npvs;\n};\nconst matchPathPattern = (pathname, pathPattern) => {\n  const m = pathname.match(pathPattern);\n  if (m === null) return null;\n  const vs = m.slice(1).map(value => ({\n    value\n  }));\n  return vs;\n};\nconst toPathPattern = template => {\n  return new RegExp('^' + template.replace(/\\{[A-Za-z0-9_-]+\\}/g, '([^\\\\/]*)') + '$');\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","params","_toParameterPattern","require","template","patterns","notFound","pathPattern","toPathPattern","parameterPattern","toParameterPattern","pathname","vs","matchPathPattern","npvs","matchParameterPattern","toParameters","map","name","reduce","a","x","assign","parameterValues","decodeURIComponent","i","pattern","hasUnmatchParameter","some","match","hasInvalidDuplicatedParameter","n","v","m","slice","RegExp","replace"],"sources":["C:/Users/Artem Nazmutdinov/vet_clinic_front/node_modules/bath-es5/params.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.params = void 0;\n\nvar _toParameterPattern = require(\"./_/to-parameter-pattern\");\n\nconst params = (template, patterns) => {\n  const notFound = null;\n  const pathPattern = toPathPattern(template);\n  const parameterPattern = (0, _toParameterPattern.toParameterPattern)(template, patterns);\n  return pathname => {\n    const vs = matchPathPattern(pathname, pathPattern);\n    if (vs === null) return notFound;\n    const npvs = matchParameterPattern(vs, parameterPattern);\n    if (npvs === null) return notFound;\n    return toParameters(npvs);\n  };\n};\n\nexports.params = params;\n\nconst toParameters = npvs => {\n  return npvs.map(({\n    name,\n    value\n  }) => ({\n    [name]: value\n  })).reduce((a, x) => Object.assign(a, x), {});\n};\n\nconst matchParameterPattern = (parameterValues, parameterPattern) => {\n  const npvs = parameterValues.map(({\n    value\n  }) => decodeURIComponent(value)).map((value, i) => {\n    const {\n      name,\n      pattern\n    } = parameterPattern[i];\n    return {\n      name,\n      pattern,\n      value\n    };\n  });\n  const hasUnmatchParameter = npvs.some(({\n    pattern,\n    value\n  }) => {\n    return pattern !== null && value.match(pattern) === null;\n  });\n  if (hasUnmatchParameter) return null;\n  const hasInvalidDuplicatedParameter = npvs.some(({\n    name,\n    value\n  }) => {\n    return npvs.some(({\n      name: n,\n      value: v\n    }) => n === name && v !== value);\n  });\n  if (hasInvalidDuplicatedParameter) return null;\n  return npvs;\n};\n\nconst matchPathPattern = (pathname, pathPattern) => {\n  const m = pathname.match(pathPattern);\n  if (m === null) return null;\n  const vs = m.slice(1).map(value => ({\n    value\n  }));\n  return vs;\n};\n\nconst toPathPattern = template => {\n  return new RegExp('^' + template.replace(/\\{[A-Za-z0-9_-]+\\}/g, '([^\\\\/]*)') + '$');\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}