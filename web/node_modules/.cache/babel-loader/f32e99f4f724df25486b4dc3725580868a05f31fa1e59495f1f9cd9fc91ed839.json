{"ast":null,"code":"/**\n * klona/json - MIT License\n *\n * https://github.com/lukeed/klona/blob/master/license\n */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"klona\", {\n  enumerable: true,\n  get: function () {\n    return klona;\n  }\n});\nfunction klona(val) {\n  var index, out, tmp;\n  if (Array.isArray(val)) {\n    out = Array(index = val.length);\n    while (index--) out[index] = (tmp = val[index]) && typeof tmp === \"object\" ? klona(tmp) : tmp;\n    return out;\n  }\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    out = {}; // null\n    for (index in val) {\n      if (index === \"__proto__\") {\n        Object.defineProperty(out, index, {\n          value: klona(val[index]),\n          configurable: true,\n          enumerable: true,\n          writable: true\n        });\n      } else {\n        out[index] = (tmp = val[index]) && typeof tmp === \"object\" ? klona(tmp) : tmp;\n      }\n    }\n    return out;\n  }\n  return val;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","klona","val","index","out","tmp","Array","isArray","length","prototype","toString","call","configurable","writable"],"sources":["C:/Users/Artem Nazmutdinov/vet_clinic_front/node_modules/dereference-json-schema/klona.js"],"sourcesContent":["/**\n * klona/json - MIT License\n *\n * https://github.com/lukeed/klona/blob/master/license\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"klona\", {\n    enumerable: true,\n    get: function() {\n        return klona;\n    }\n});\nfunction klona(val) {\n    var index, out, tmp;\n    if (Array.isArray(val)) {\n        out = Array(index = val.length);\n        while(index--)out[index] = (tmp = val[index]) && typeof tmp === \"object\" ? klona(tmp) : tmp;\n        return out;\n    }\n    if (Object.prototype.toString.call(val) === \"[object Object]\") {\n        out = {}; // null\n        for(index in val){\n            if (index === \"__proto__\") {\n                Object.defineProperty(out, index, {\n                    value: klona(val[index]),\n                    configurable: true,\n                    enumerable: true,\n                    writable: true\n                });\n            } else {\n                out[index] = (tmp = val[index]) && typeof tmp === \"object\" ? klona(tmp) : tmp;\n            }\n        }\n        return out;\n    }\n    return val;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GAAI,YAAY;;AAChBA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EACpCE,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAE,SAAAA,CAAA,EAAW;IACZ,OAAOC,KAAK;EAChB;AACJ,CAAC,CAAC;AACF,SAASA,KAAKA,CAACC,GAAG,EAAE;EAChB,IAAIC,KAAK,EAAEC,GAAG,EAAEC,GAAG;EACnB,IAAIC,KAAK,CAACC,OAAO,CAACL,GAAG,CAAC,EAAE;IACpBE,GAAG,GAAGE,KAAK,CAACH,KAAK,GAAGD,GAAG,CAACM,MAAM,CAAC;IAC/B,OAAML,KAAK,EAAE,EAACC,GAAG,CAACD,KAAK,CAAC,GAAG,CAACE,GAAG,GAAGH,GAAG,CAACC,KAAK,CAAC,KAAK,OAAOE,GAAG,KAAK,QAAQ,GAAGJ,KAAK,CAACI,GAAG,CAAC,GAAGA,GAAG;IAC3F,OAAOD,GAAG;EACd;EACA,IAAIT,MAAM,CAACc,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACT,GAAG,CAAC,KAAK,iBAAiB,EAAE;IAC3DE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACV,KAAID,KAAK,IAAID,GAAG,EAAC;MACb,IAAIC,KAAK,KAAK,WAAW,EAAE;QACvBR,MAAM,CAACC,cAAc,CAACQ,GAAG,EAAED,KAAK,EAAE;UAC9BL,KAAK,EAAEG,KAAK,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC;UACxBS,YAAY,EAAE,IAAI;UAClBb,UAAU,EAAE,IAAI;UAChBc,QAAQ,EAAE;QACd,CAAC,CAAC;MACN,CAAC,MAAM;QACHT,GAAG,CAACD,KAAK,CAAC,GAAG,CAACE,GAAG,GAAGH,GAAG,CAACC,KAAK,CAAC,KAAK,OAAOE,GAAG,KAAK,QAAQ,GAAGJ,KAAK,CAACI,GAAG,CAAC,GAAGA,GAAG;MACjF;IACJ;IACA,OAAOD,GAAG;EACd;EACA,OAAOF,GAAG;AACd"},"metadata":{},"sourceType":"script","externalDependencies":[]}