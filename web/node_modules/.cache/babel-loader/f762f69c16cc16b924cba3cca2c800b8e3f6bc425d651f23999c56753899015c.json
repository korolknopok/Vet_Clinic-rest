{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artem Nazmutdinov\\\\source\\\\repos\\\\Vet_Clinic-rest\\\\web\\\\src\\\\routes\\\\contact.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport React from 'react';\nimport ClientInfo from \"../components/ClientInfo.tsx\";\nimport { ClientApiFactory } from '../json/api.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar f = ClientApiFactory();\nfunction List() {\n  _s();\n  const [data, setData] = useState([]);\n  async function getDataFromApi() {\n    const response = await f.apiClientGet();\n    const {\n      data\n    } = response;\n    setData(data);\n  }\n  useEffect(() => {\n    getDataFromApi();\n  }, []);\n  const handleDeleteData = id => {\n    console.log(id);\n    f.apiClientIdDelete(id).then(response => {\n      if (response.status == 200) {\n        // Успешное удаление данных\n        console.log('Данные успешно удалены');\n        getDataFromApi();\n      } else {\n        // Обработка ошибки, если требуется\n        console.log('Ошибка при удалении данных');\n      }\n    }).catch(error => {\n      // Обработка ошибки, если требуется\n      console.log('Ошибка при удалении данных:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ClientInfo, {\n        post: post,\n        handleDeleteData: handleDeleteData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(List, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","useEffect","React","ClientInfo","ClientApiFactory","jsxDEV","_jsxDEV","f","List","_s","data","setData","getDataFromApi","response","apiClientGet","handleDeleteData","id","console","log","apiClientIdDelete","then","status","catch","error","children","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Artem Nazmutdinov/source/repos/Vet_Clinic-rest/web/src/routes/contact.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport React from 'react'\r\nimport ClientInfo from \"../components/ClientInfo.tsx\";\r\nimport {ClientApiFactory } from '../json/api.ts';\r\n\r\nvar f = ClientApiFactory(); \r\n\r\nfunction List() {\r\n    const [data, setData] = useState([]);\r\n\r\n    async function getDataFromApi() {\r\n        const response = await f.apiClientGet();\r\n        const { data } = response;\r\n        setData(data);\r\n    }\r\n    useEffect(() => {\r\n        getDataFromApi();\r\n    }, []);\r\n\r\n    const handleDeleteData = (id) => {\r\n        console.log(id);\r\n        f.apiClientIdDelete(id)\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    // Успешное удаление данных\r\n                    console.log('Данные успешно удалены');\r\n                    getDataFromApi();\r\n                } else {\r\n                    // Обработка ошибки, если требуется\r\n                    console.log('Ошибка при удалении данных');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // Обработка ошибки, если требуется\r\n                console.log('Ошибка при удалении данных:', error);\r\n            });\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            {data.map(post => \r\n                <div key = {post.id}>\r\n                    <ClientInfo post = {post} handleDeleteData={handleDeleteData}/>          \r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,8BAA8B;AACrD,SAAQC,gBAAgB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,IAAIC,CAAC,GAAGH,gBAAgB,CAAC,CAAC;AAE1B,SAASI,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,eAAeY,cAAcA,CAAA,EAAG;IAC5B,MAAMC,QAAQ,GAAG,MAAMN,CAAC,CAACO,YAAY,CAAC,CAAC;IACvC,MAAM;MAAEJ;IAAK,CAAC,GAAGG,QAAQ;IACzBF,OAAO,CAACD,IAAI,CAAC;EACjB;EACAT,SAAS,CAAC,MAAM;IACZW,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAIC,EAAE,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACfT,CAAC,CAACY,iBAAiB,CAACH,EAAE,CAAC,CAClBI,IAAI,CAACP,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACQ,MAAM,IAAI,GAAG,EAAE;QACxB;QACAJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCN,cAAc,CAAC,CAAC;MACpB,CAAC,MAAM;QACH;QACAK,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC7C;IACJ,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACZ;MACAN,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEK,KAAK,CAAC;IACrD,CAAC,CAAC;EACV,CAAC;EAED,oBACIjB,OAAA;IAAAkB,QAAA,EACKd,IAAI,CAACe,GAAG,CAACC,IAAI,iBACVpB,OAAA;MAAAkB,QAAA,eACIlB,OAAA,CAACH,UAAU;QAACuB,IAAI,EAAIA,IAAK;QAACX,gBAAgB,EAAEA;MAAiB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,GADvDJ,IAAI,CAACV,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACrB,EAAA,CAxCQD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA0Cb,eAAeA,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}